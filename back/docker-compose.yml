version: '3.8'

services:
  django:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: giga-django
    restart: unless-stopped
    ports:
      - "8000:8000"
    environment:
      - DEBUG=True
      - SECRET_KEY=django-insecure-giga-dev-key-change-in-production
      - DB_NAME=giga
      - DB_USER=giga_user
      - DB_PASSWORD=giga2025
      - DB_HOST=giga-postgres
      - DB_PORT=5432
      - ALLOWED_HOSTS=localhost,127.0.0.1,0.0.0.0
      - CORS_ALLOW_ALL_ORIGINS=True
    volumes:
      - .:/app
      - static_volume:/app/staticfiles
      - media_volume:/app/media
    networks:
      - giga-network
    depends_on:
      - postgres
    healthcheck:
      test: ["CMD", "python", "manage.py", "check", "--database", "default"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s

  postgres:
    image: postgres:16-alpine
    container_name: giga-postgres
    restart: unless-stopped
    environment:
      - POSTGRES_DB=giga
      - POSTGRES_USER=giga_user
      - POSTGRES_PASSWORD=giga2025
      - PGDATA=/var/lib/postgresql/data/pgdata
    volumes:
      - postgres_data:/var/lib/postgresql/data
      # Conectar con los scripts de inicializaci√≥n del directorio bd
      - ../bd/init-scripts:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"
    networks:
      - giga-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U giga_user -d giga"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s

volumes:
  postgres_data:
    driver: local
  static_volume:
    driver: local
  media_volume:
    driver: local

networks:
  giga-network:
    driver: bridge
    external: false