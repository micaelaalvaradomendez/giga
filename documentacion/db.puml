@startuml Sistema_Control_Horario_DB
!define TABLE_ENTITY(x) entity x
!define PRIMARY_KEY(x) <b><color:#FF0000>x</color></b>
!define UNIQUE(x) <u>x</u>
!define NOT_NULL(x) <b>x</b>

' =======================================
' Usuarios (lógico; en Django será auth_user)
' =======================================
entity usuarios {
  * id : UUID <<PK>>
  --
  * email : VARCHAR(100) <<UNIQUE>>
  * password_hash : VARCHAR(255)
  activo : BOOLEAN DEFAULT TRUE
  creado_en : TIMESTAMP DEFAULT NOW()
  actualizado_en : TIMESTAMP
}

' =======================================
' Áreas (jerarquía)
' =======================================
entity areas {
  * id : UUID <<PK>>
  --
  * nombre : VARCHAR(150)
  area_padre_id : UUID <<FK>>
  activa : BOOLEAN DEFAULT TRUE
  creado_en : TIMESTAMP DEFAULT NOW()
  actualizado_en : TIMESTAMP
  creado_por_id : UUID <<FK>>
  actualizado_por_id : UUID <<FK>>
  --
  note : Unidades organizativas: direcciones, jefaturas, departamentos
  note : CHECK (area_padre_id IS NULL OR area_padre_id <> id)
  --
  indexes : (nombre, area_padre_id) UNIQUE
}

' =======================================
' Roles / Permisos / Asignaciones
' =======================================
entity roles {
  * id : UUID <<PK>>
  --
  * nombre : VARCHAR(60) <<UNIQUE>>
  descripcion : TEXT
  creado_en : TIMESTAMP DEFAULT NOW()
  actualizado_en : TIMESTAMP
  creado_por_id : UUID <<FK>>
  actualizado_por_id : UUID <<FK>>
}

entity permisos {
  * id : UUID <<PK>>
  --
  * codigo : VARCHAR(100) <<UNIQUE>>
  descripcion : TEXT
  creado_en : TIMESTAMP DEFAULT NOW()
  actualizado_en : TIMESTAMP
  creado_por_id : UUID <<FK>>
  actualizado_por_id : UUID <<FK>>
}

entity permisos_roles {
  * id : UUID <<PK>>
  --
  * rol_id : UUID <<FK>>
  * permiso_id : UUID <<FK>>
  creado_en : TIMESTAMP DEFAULT NOW()
  actualizado_en : TIMESTAMP
  creado_por_id : UUID <<FK>>
  actualizado_por_id : UUID <<FK>>
  --
  indexes : (rol_id, permiso_id) UNIQUE
}

entity agentes_roles {
  * id : UUID <<PK>>
  --
  * usuario_id : UUID <<FK>>
  * rol_id : UUID <<FK>>
  area_id : UUID <<FK>>
  asignado_en : TIMESTAMP DEFAULT NOW()
  creado_por_id : UUID <<FK>>
  actualizado_por_id : UUID <<FK>>
  --
  note : Un usuario puede tener distintos roles por área
  --
  indexes : (usuario_id, rol_id, area_id) UNIQUE
}

' =======================================
' Agentes (perfil de persona, enlazado a usuario)
' =======================================
entity agentes {
  * id : UUID <<PK>>
  --
  * usuario_id : UUID <<FK>> <<UNIQUE>>
  * dni : VARCHAR(8) <<UNIQUE>>
  legajo : VARCHAR(20) <<UNIQUE>>
  * apellido : VARCHAR(50)
  * nombre : VARCHAR(50)
  * fecha_nac : DATE
  telefono : VARCHAR(20)
  * email : VARCHAR(100) <<UNIQUE>>
  provincia : VARCHAR(50) DEFAULT 'Tierra del Fuego'
  ciudad : VARCHAR(50)
  calle : VARCHAR(100)
  numero : VARCHAR(10)
  horario_entrada : TIME
  horario_salida : TIME
  * categoria_revista : VARCHAR(5)
  * agrupacion : VARCHAR(5)
  es_jefe : BOOLEAN DEFAULT FALSE
  id_jefe : UUID <<FK>>
  categoria_usuf : VARCHAR(5)
  --
  creado_en : TIMESTAMP DEFAULT NOW()
  actualizado_en : TIMESTAMP
  creado_por_id : UUID <<FK>>
  actualizado_por_id : UUID <<FK>>
  --
  note : agrupacion: EPU / POMyS / PAyT
}

' =======================================
' Guardias: Cronograma (cabecera) y asignaciones (detalle)
' =======================================
entity cronograma_guardias {
  * id : UUID <<PK>>
  --
  * area_id : UUID <<FK>>
  * fecha : DATE
  * hora_inicio : TIME
  * hora_fin : TIME
  tipo : VARCHAR(40)
  estado : VARCHAR(30) DEFAULT 'generada'
  creado_por_id : UUID <<FK>>
  actualizado_por_id : UUID <<FK>>
  aprobado_por_id : UUID <<FK>>
  aprobado_en : TIMESTAMP
  creado_en : TIMESTAMP DEFAULT NOW()
  actualizado_en : TIMESTAMP
  --
  note : Cabecera del turno (franja por área)
  note : estados: generada|aprobada|rechazada|publicada
  note : CHECK (hora_fin > hora_inicio)
  --
  indexes : (area_id, fecha, hora_inicio, hora_fin)
}

entity guardias {
  * id : UUID <<PK>>
  --
  * cronograma_id : UUID <<FK>>
  * usuario_id : UUID <<FK>>
  * fecha : DATE
  --
  hora_inicio : TIME
  hora_fin : TIME
  --
  tipo : VARCHAR(40)
  activa : BOOLEAN DEFAULT FALSE
  estado : VARCHAR(20) DEFAULT 'borrador'
  --
  horas_planificadas : NUMERIC(5,2)
  horas_efectivas : NUMERIC(5,2)
  observaciones : TEXT
  --
  creado_por_id : UUID <<FK>>
  actualizado_por_id : UUID <<FK>>
  creado_en : TIMESTAMP DEFAULT NOW()
  actualizado_en : TIMESTAMP
  --
  note : Asistencia real: si NO asistió, quedan NULL
  note : estados: borrador|aprobada|publicada|anulada
  note : CHECK: si hay hora_fin debe haber hora_inicio
  note : CHECK: si ambas existen, fin > inicio
  --
  indexes : (cronograma_id, usuario_id, fecha) UNIQUE
} 

' =======================================
' Auditoría
' =======================================
entity auditoria {
  * id : UUID <<PK>>
  --
  creado_en : TIMESTAMP DEFAULT NOW()
  creado_por_id : UUID <<FK>>
  actualizado_por_id : UUID <<FK>>
  nombre_tabla : VARCHAR(255)
  pk_afectada : VARCHAR(255)
  accion : VARCHAR(20)
  valor_previo : JSON
  valor_nuevo : JSON
  --
  note : accion: create|update|delete
  --
  indexes : (nombre_tabla, pk_afectada, creado_en)
}

' =======================================
' Asistencia / Parte diario / Licencias
' =======================================
entity tipo_licencia {
  * id : UUID <<PK>>
  --
  codigo : VARCHAR(255) <<UNIQUE>>
  descripcion : VARCHAR(255)
}

entity parte_diario {
  * id : UUID <<PK>>
  --
  creado_en : TIMESTAMP DEFAULT NOW()
  * fecha_parte : DATE
  estado : VARCHAR(20) DEFAULT 'borrador'
  observaciones : TEXT
  * area_id : UUID <<FK>>
  * agente_id : UUID <<FK>>
  * tipo_licencia_id : UUID <<FK>>
  creado_por_id : UUID <<FK>>
  actualizado_por_id : UUID <<FK>>
  --
  note : estados: borrador|confirmado|anulado
  --
  indexes : (area_id, fecha_parte, agente_id)
}

' =======================================
' Relaciones entre entidades
' =======================================

' Relaciones jerárquicas
areas ||--o{ areas : "area_padre_id"
agentes ||--o{ agentes : "id_jefe"

' Usuario -> Agente (1:1)
usuarios ||--|| agentes : "usuario_id"

' Usuario -> Auditoría (1:N)
usuarios ||--o{ auditoria : "creado_por_id"

' Área -> Agentes (1:N)
areas ||--o{ agentes : "área asignada (impl. en agentes_roles)"

' Roles y permisos
roles ||--o{ permisos_roles : "rol_id"
permisos ||--o{ permisos_roles : "permiso_id"

usuarios ||--o{ agentes_roles : "usuario_id"
roles ||--o{ agentes_roles : "rol_id"
areas ||--o{ agentes_roles : "area_id"

' Guardias
areas ||--o{ cronograma_guardias : "area_id"
cronograma_guardias ||--o{ guardias : "cronograma_id"
usuarios ||--o{ guardias : "usuario_id"

' Parte diario / Licencias
areas ||--o{ parte_diario : "area_id"
agentes ||--o{ parte_diario : "agente_id"
tipo_licencia ||--o{ parte_diario : "tipo_licencia_id"

' Auditoría relaciones
usuarios ||--o{ areas : "creado_por_id"
usuarios ||--o{ roles : "creado_por_id"
usuarios ||--o{ permisos : "creado_por_id"
usuarios ||--o{ cronograma_guardias : "creado_por_id"
usuarios ||--o{ guardias : "creado_por_id"
usuarios ||--o{ parte_diario : "creado_por_id"

@enduml
