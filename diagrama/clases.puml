@startuml clases
title Sistema de Control Horario y Guardias

' ====== PAQUETE: PERSONAS ======
package personas {
class Agente {
..Atributos..
+id: UUID
+legajo: String
+nombre: String
+apellido: String
+email: String
+telefono: String
+activo: Boolean
+fechaIngreso: Date
..Métodos..
+nombreCompleto(): String
+puedeMarcar(fecha: Date): Boolean
+esActivo(): Boolean
}

class Area {
..Atributos..
+id: UUID
+codigo: String
+nombre: String
+descripcion: String
+activa: Boolean
..Métodos..
+agentesActivos(): List<Agente>
}

class CuentaAcceso {
..Atributos..
+id: UUID
+agenteId: UUID
+usuario: String
+password: String
+activa: Boolean
+ultimoAcceso: DateTime
..Métodos..
+autenticar(password: String): Boolean
+cambiarPassword(nueva: String): void
}

class Rol {
..Atributos..
+id: UUID
+nombre: String
+permisos: JSON
+activo: Boolean
..Métodos..
+tienePermiso(accion: String): Boolean
}
}

' ====== PAQUETE: ASISTENCIA ======
package asistencia {
class Asistencia {
..Atributos..
+id: UUID
+agenteId: UUID
+fecha: Date
+horaEntrada: Time
+horaSalida: Time
+estado: EstadoAsistencia
+observaciones: String
..Métodos..
+calcularHorasTrabajadas(): Decimal
+esCompleta(): Boolean
}

enum EstadoAsistencia { 
    PRESENTE
    AUSENTE
    TARDANZA
    SALIDA_TEMPRANA 
}

class Marca {
..Atributos..
+id: UUID
+asistenciaId: UUID
+tipo: TipoMarca
+hora: Time
+dispositivo: String
+validada: Boolean
..Métodos..
+validar(): void
+esConsistente(): Boolean
}

enum TipoMarca { 
    ENTRADA
    SALIDA 
}

abstract class LicenciaONovedad {
..Atributos..
+id: UUID
+agenteId: UUID
+desde: Date
+hasta: Date
+motivo: String
+estado: EstadoSolicitud
+solicitadoEn: DateTime
+aprobadoPor: UUID
+aprobadoEn: DateTime
..Métodos..
+duracionEnDias(): Int
+superponeConPeriodo(desde: Date, hasta: Date): Boolean
+aprobar(usuario: UUID): void
+rechazar(usuario: UUID, motivo: String): void
}

class Licencia {
..Atributos..
+tipo: TipoLicencia
+remunerada: Boolean
..Métodos..
+esJustificada(): Boolean
}

class Novedad {
..Atributos..
+categoria: CategoriaNovedad
+urgente: Boolean
..Métodos..
+requiereAprobacion(): Boolean
}

enum TipoLicencia { 
    VACACIONES
    ENFERMEDAD
    PERSONAL
    ESTUDIO 
}
enum CategoriaNovedad { 
    MEDICA
    FAMILIAR
    CAPACITACION 
}
enum EstadoSolicitud { 
    PENDIENTE
    APROBADA
    RECHAZADA 
}

class Adjunto {
..Atributos..
+id: UUID
+licenciaONovedadId: UUID
+nombre: String
+rutaArchivo: String
+tipo: String
+tamaño: Long
..Métodos..
+validarFormato(): Boolean
}
}

' ====== PAQUETE: GUARDIAS ======
package guardias {
class CronogramaGuardias {
..Atributos..
+id: UUID
+nombre: String
+areaId: UUID
+periodo: YearMonth
+estado: EstadoCronograma
+publicadoEn: DateTime
+publicadoPor: UUID
..Métodos..
+publicar(): void
+calcularHorasTotal(): Decimal
+validarCobertura(): Boolean
}

enum EstadoCronograma { 
    BORRADOR
    PUBLICADO
    CERRADO     
}

class Guardia {
..Atributos..
+id: UUID
+cronogramaId: UUID
+agenteId: UUID
+fecha: Date
+horaInicio: Time
+horaFin: Time
+tipo: TipoGuardia
+observaciones: String
..Métodos..
+duracionEnHoras(): Decimal
+superponeConOtraGuardia(otra: Guardia): Boolean
}

enum TipoGuardia { 
    OPERATIVA
    ADMINISTRATIVA 
}

class HorasGuardias {
..Atributos..
+id: UUID
+agenteId: UUID
+periodo: YearMonth
+horasOperativas: Decimal
+horasAdministrativas: Decimal
+calculadoEn: DateTime
..Métodos..
+totalHoras(): Decimal
+recalcular(): void
}

class Feriado {
..Atributos..
+id: UUID
+fecha: Date
+descripcion: String
+nacional: Boolean
+activo: Boolean
..Métodos..
+esFeriadoEn(fecha: Date): Boolean
}

class ReglaPlus {
..Atributos..
+id: UUID
+nombre: String
+descripcion: String
+umbralHorasOperativa: Decimal
+umbralHorasAdministrativa: Decimal
+aplicaA: AplicaA
+vigenteDesde: Date
+vigenteHasta: Date
+prioridad: Int
..Métodos..
+evaluar(agente: Agente, horas: HorasGuardias, area: Area): AsignacionPlus
+esVigente(enFecha: Date): boolean
}
enum AplicaA { 
    OPERATIVA
    ADMINISTRATIVA
    AMBAS 
}
class AsignacionPlus {
..Atributos..
+id: UUID
+agenteId: UUID
+periodo: YearMonth
+reglaPlusId: UUID
+porcentaje: Decimal
+horasConsideradas: Decimal
+motivo: String
+calculadoEn: DateTime
..Métodos..
+generarComprobante(): Archivo
+esConsistenteCon(horas: HorasGuardias): boolean
}
}
' ====== PAQUETE: PARÁMETROS / AUDITORÍA / REPORTES ======
package parametros_y_auditoria {
class ParametrosControlHorario {
..Atributos..
+id: UUID
+ventanaMarcacionIngresoMin: Int
+ventanaMarcacionEgresoMin: Int
+toleranciaIngresoMin: Int
+toleranciaEgresoMin: Int
+politicaVentanas: PoliticaVentanas
+version: Int
+vigenteDesde: Date
+vigenteHasta: Date
+creadoEn: DateTime
+actualizadoEn: DateTime
..Métodos..
+validarCoherencia(): void
+aplicarDesde(fecha: Date): void
+versionar(nuevaCfg: ParametrosControlHorario): ParametrosControlHorario
+restaurar(version: Int): ParametrosControlHorario
+reglasPlus(): List<ReglaPlus>
}
enum PoliticaVentanas { 
    ESTRICTO
    FLEXIBLE 
}
class RegistroAuditoria {
..Atributos..
+id: UUID
+entidad: String
+entidadId: UUID
+accion: AccionAuditoria
+usuarioId: UUID
+fechaHora: DateTime
+datosPrevios: JSON
+datosNuevos: JSON
+ip: String
..Métodos..
+{static} registrar(entidad: String, entidadId: UUID, accion: AccionAuditoria, usuarioId: UUID, prev: JSON,
nuevo: JSON, ip: String): void
+buscar(filtros: Map): List<RegistroAuditoria>
+exportar(formato: FormatoReporte): Archivo
}
enum AccionAuditoria { 
    CREATE
    UPDATE
    DELETE
    LOGIN
    RECOVERY 
    PUBLICACION
}
package reportes_y_notificaciones {
class Reporte {
..Atributos..
+id: UUID
+tipo: TipoReporte
+filtros: JSON
+formato: FormatoReporte
+generadoPor: UUID
+generadoEn: DateTime
+rutaArchivo: String
+estado: EstadoReporte
+error: String
..Métodos..
+previsualizar(filtros: JSON): Vista
+exportar(filtros: JSON, formato: FormatoReporte): Archivo
+validarFiltros(filtros: JSON): void
}
enum TipoReporte { 
    INDIVIDUAL
    AREA 
    DIRECCION 
    CONSOLIDADO 
}
enum FormatoReporte { 
    PDF 
    XLSX 
}
enum EstadoReporte { 
    LISTO
    ERROR 
    }
class EnvioLoteNotificaciones {
..Atributos..
+id: UUID
+cronogramaId: UUID
+creadoEn: DateTime
+total: Int
+enviados: Int
+fallidos: Int
+estado: EstadoLote
..Métodos..
+iniciarParaPublicacion(cronograma: guardias.CronogramaGuardias): void
+registrarResultado(notif: Notificacion, ok: Boolean): void
+resumen(): String
}
enum EstadoLote { 
    PENDIENTE 
    PARCIAL
    COMPLETO 
    }
class Notificacion {
..Atributos..
+id: UUID
+remitenteId: UUID
+destinatarioId: UUID
+asunto: String
+cuerpo: Text
+medio: MedioNotificacion
+origen: OrigenNotificacion
+estadoEnvio: EstadoEnvio
+intentos: Int
+ultimoIntentoEn: DateTime
+errorMensaje: String
+plantillaId: UUID
+creadoEn: DateTime
..Métodos..
+redactar(remitente: Agente, destinatario: Agente, asunto: String, cuerpo: Text, origen: OrigenNotificacion):
void
+enviar(): void
+reintentar(): void
+marcarError(mensaje: String): void
}
enum MedioNotificacion { EMAIL }
enum OrigenNotificacion { 
    SISTEMA
    USUARIO 
}
enum EstadoEnvio { 
    PENDIENTE
    ENVIADO
    ERROR 
}
class PlantillaCorreo {
..Atributos..
+id: UUID
+nombre: String
+asuntoTpl: String
+cuerpoTpl: Text
+variables: JSON
+version: Int
+vigenteDesde: Date
+vigenteHasta: Date
..Métodos..
+render(variables: Map): RenderCorreo
}

class RenderCorreo {
..Atributos..
+asunto: String
+cuerpo: Text
+variables: Map
..Métodos..
+validar(): Boolean
}

class Vista {
..Atributos..
+datos: JSON
+formato: String
..Métodos..
+renderizar(): String
}
}
' ====== PAQUETE: CONVENIO / IA (CORPUS CERRADO) ======
package convenio_ia {
class Convenio {
..Atributos..
+id: UUID
+version: String
+vigenciaDesde: Date
+vigenciaHasta: Date
+archivoRuta: String
+hash: String
+estado: EstadoConvenio
..Métodos..
+actualizarVersion(archivo: Archivo): void
+vigenteEn(fecha: Date): boolean
}
enum EstadoConvenio { 
    VIGENTE
    OBSOLETO 
}
class IndiceConvenio {
..Atributos..
+id: UUID
+convenioId: UUID
+metodo: MetodoIndice
+hashIndice: String
+construidoEn: DateTime
+versionMotor: String
..Métodos..
+construir(convenio: Convenio, metodo: MetodoIndice): void
+buscar(pregunta: Text): ResultadoBusqueda
}
enum MetodoIndice { 
    BM25
    EMBEDDINGS 
    }
class ConsultaConvenio {
..Atributos..
+id: UUID
+usuarioId: UUID
+pregunta: Text
+respuesta: Text
+citas: JSON
+creadoEn: DateTime
..Métodos..
+responder(indice: IndiceConvenio, pregunta: Text): RespuestaConCitas
+registrarAuditoria(): void
}

class ResultadoBusqueda {
..Atributos..
+resultados: List<String>
+relevancia: Decimal
+tiempo: Duration
..Métodos..
+obtenerPrimeros(n: Int): List<String>
}

class RespuestaConCitas {
..Atributos..
+respuesta: Text
+citas: List<String>
+confianza: Decimal
..Métodos..
+formatear(): String
}

class Archivo {
..Atributos..
+nombre: String
+contenido: Byte[]
+tipo: String
+tamaño: Long
..Métodos..
+guardar(ruta: String): void
+leer(): Byte[]
}
}
' ====== RELACIONES ======
' Asociaciones
personas.Agente "*" --> "1" personas.Area : pertenece a
personas.Agente "1" -- "0..*" asistencia.Asistencia
asistencia.Asistencia "1" -- "1..*" asistencia.Marca
personas.Agente "1" -- "0..*" asistencia.LicenciaONovedad
asistencia.LicenciaONovedad "1" o-- "0..*" asistencia.Adjunto
guardias.CronogramaGuardias "1" -- "0..*" guardias.Guardia
guardias.CronogramaGuardias "*" --> "1" personas.Area : de
guardias.Guardia "*" --> "1" personas.Agente : asignada a
parametros_y_auditoria.ParametrosControlHorario "1" -- "0..*" asistencia.Asistencia : rige
parametros_y_auditoria.ParametrosControlHorario "1" -- "0..*" guardias.Guardia : rige
parametros_y_auditoria.ParametrosControlHorario "1" o-- "0..*" guardias.ReglaPlus
guardias.Feriado "*" --> "0..*" guardias.CronogramaGuardias : afecta
guardias.HorasGuardias "1" -- "0..*" guardias.AsignacionPlus
personas.Agente "1" -- "0..*" parametros_y_auditoria.RegistroAuditoria
asistencia.Asistencia "1" -- "0..*" parametros_y_auditoria.RegistroAuditoria
guardias.Guardia "1" -- "0..*" parametros_y_auditoria.RegistroAuditoria
asistencia.LicenciaONovedad "1" -- "0..*" parametros_y_auditoria.RegistroAuditoria
reportes_y_notificaciones.Reporte ..> asistencia.Asistencia : lee
reportes_y_notificaciones.Reporte ..> guardias.Guardia : lee
reportes_y_notificaciones.Reporte ..> asistencia.LicenciaONovedad : lee
reportes_y_notificaciones.Notificacion "*" --> "1" personas.Agente : destinatario
reportes_y_notificaciones.Notificacion "*" --> "1" personas.Agente : remitente
reportes_y_notificaciones.Notificacion "*" --> "1" reportes_y_notificaciones.PlantillaCorreo : usa
reportes_y_notificaciones.EnvioLoteNotificaciones "1" -- "0..*" reportes_y_notificaciones.Notificacion
reportes_y_notificaciones.EnvioLoteNotificaciones "*" --> "1" guardias.CronogramaGuardias : de publicacion
convenio_ia.Convenio "1" -- "1" convenio_ia.IndiceConvenio
convenio_ia.ConsultaConvenio "*" --> "1" convenio_ia.IndiceConvenio : usa
personas.CuentaAcceso "1" -- "1" personas.Agente
personas.Agente "1" -- "0..*" personas.Rol
' Composiciones
asistencia.Asistencia *-- asistencia.Marca
guardias.CronogramaGuardias *-- guardias.Guardia
convenio_ia.Convenio *-- convenio_ia.IndiceConvenio
guardias.HorasGuardias *-- guardias.AsignacionPlus
' Herencias
asistencia.LicenciaONovedad <|-- asistencia.Licencia
asistencia.LicenciaONovedad <|-- asistencia.Novedad
' (Notificación unificada: se removieron NotificacionSistema/NotificacionUsuario)
@enduml